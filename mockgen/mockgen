#!/usr/bin/env perl

############################################################################
#
# Quick script to generate random rows of comma separated
# values (duplicates possible).
# This can be used to generate random sample of mock data.
# The number of rows and path where the data file should be created can be
# changed via command line.
#
# The __DATA__ section can be modified to fit the use case
#
# Usage: perl mockgen.pl 5000 samples
#
# Author: Arun S Kumar <askdrcatcher@gmail.com>
#
############################################################################

use IO::File;
use Cwd qw(abs_path);
use File::Basename qw(fileparse dirname);
use File::Path qw(make_path);

sub generate {

	my $n = shift || 1000;
	my $abs_file = shift || dirname(abs_path($0)) . "/samples";
	my ($file, $dirpath) = fileparse $abs_file;

	make_path $dirpath or die "Failed to create path: $dirpath $!\n" unless (-e $dirpath);

	unlink $abs_file if (-e $abs_file);
	open(my $fo, '>:encoding(UTF-8)', $abs_file) or die "Couldn't open file $file";

	print "no of rows generated: ". $n . "\n";

	for(1 .. $n) {

		my $pos = tell DATA;
		my @data = map { $_ } <DATA>;
		my $row = "";

		map { 
			my @options = (split /\|/, $_);
			$row = $row . $options[rand $#options] . ',';
		} @data;

		chop $row; # remove the last ,

		print $fo $row . "\n";

		seek DATA, $pos, 0; #reset to start of __DATA__
	}

	close $fo;
	print "file created at location $abs_file \n";
}

generate(@ARGV);

__DATA__
arun|viji|pranav|priya|arthur|leo|sinai|yang
23|32|56|78|12|29|32|34
M|F|M|F|M|M|M|M
IND|IND|IND|IND|USA|USA|RUS|CHN
